package com.CodeBuilder.core.utils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
public class SettingUtils {


    public static void main(String[] args){
        SettingUtils test = new SettingUtils();
        test.checkTables();
    }

    public boolean checkTables() {
        boolean check = false;
        Connection conn = null;
        PreparedStatement st = null;
        ResultSet rs = null;
        try {
            conn = DbUtils.getConnection();
            String sql = "select count(*) as num from setting where is_open = '1' ";
            st= conn.prepareStatement(sql);
            rs = st.executeQuery();

            while (rs.next()) {
                int num = rs.getInt("num");
                System.out.println(num);
                if(num>0){
                    check = true;
                }
            }
        } catch (SQLException e) {
            //e.printStackTrace();
            check = false;
        }finally {
            DbUtils.colseResource(conn, st, rs);
        }
        return check;
    }

    public boolean createTable() {

        boolean check = true;

        Connection conn = null;
        PreparedStatement st = null;
        ResultSet rs = null;
        try {
            conn = DbUtils.getConnection();
            String sql = "CREATE TABLE setting (" +
                    "  id int NOT NULL GENERATED BY DEFAULT AS IDENTITY," +
                    "  dbname varchar(255) DEFAULT NULL," +
                    "  table_name varchar(255) DEFAULT NULL," +
                    "  package_name varchar(255) DEFAULT NULL," +
                    "  create_date varchar(255) DEFAULT NULL," +
                    "  author varchar(255) DEFAULT NULL," +
                    "  table_annotation varchar(255) DEFAULT NULL," +  //表简介
                    "  file_path varchar(255) DEFAULT NULL," +  //文件生成路径
                    "  is_open varchar(255) DEFAULT NULL," +  //是否开启，0未开启，1已开启
                    "  is_open varchar(255) DEFAULT NULL," +  //是否默认设置，1为默认
                    "  PRIMARY KEY (id)" +
                    ")";
            st= conn.prepareStatement(sql);
            st.executeUpdate();

            String insertsql = "insert into setting values(null,?,?,?,?,?,?,?)";
            st.setString(1, "提莫");

            //插入默认数据


        } catch (SQLException e) {
            check = false;
        }finally {
            DbUtils.colseResource(conn, st, rs);
        }

        return check;
    }


    public void add() {
        Connection conn = null;
        PreparedStatement st = null;
        ResultSet rs = null;

        try {
            // 获取连接
            conn = DbUtils.getConnection();

            // 编写sql
            String sql = "insert into category values (?,?)";

            // 创建语句执行者
            st= conn.prepareStatement(sql);

            //设置参数
            st.setString(1, "10");
            st.setString(2, "测试目录");

            // 执行sql
            int i = st.executeUpdate();

            if(i==1) {
                System.out.println("数据添加成功！");
            }else {
                System.out.println("数据添加失败！");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }finally {
            DbUtils.colseResource(conn, st, rs);
        }

    }

}
